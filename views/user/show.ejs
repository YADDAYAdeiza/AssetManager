<div class = "profileCreatedMsgDivCont">
   <h1>
       <p class = 'profileCreatedMsg'>Profile succesfully created!</p>
   </h1>
</div>

<div class="user-show-div">
        
    <div>
        <h2><%=user.firstName%></h2>
<p><img height= "100" width="120" src="<%= user.userProfilePic%>"></p>

<a href="/user/<%=user.id%>/edit">Edit</a> |
<!-- change this href to the populated version of user -->
<a href="/user/<%=user.id%>/edit">View Asset</a> |


<%-include('_userContent', {btnVal:`Asset Pool`})%>
<%-include('../partials/deleteForm', {url:`/user/${user.id}`})%>
<form id = 'updateForm' method="POST" >
    <button class = 'btn btn-delete' type="submit">Update</button>
</form>

<div class="user-assetsOwn-div">Own Assets
    
    <% ownAssets.forEach(asset=>{ %>
        <div class="divContLi" onclick = 'triggerClickCheckbox(this)' data-asset-id="<%=asset.id%>">
            <li><input type="checkbox" class = 'user-asset-pool-checkbox' style="display:inline; width:10%"><a href="/asset/<%=asset.id%>"><%=asset.assetCode%></a></li>
        </div>
        <%})%>
        
    </div>
    <button onclick = "userAssetDeassign(this, 'user-assetsOwn-div', 'updateFormOwn')">DeAssign</button>
    <%-include('_userContent', {btnVal:`Asset Pool`})%> 
    <form id = 'updateFormOwn' method="POST" >
        <button class = 'btn btn-delete' type="submit">Update</button>
    </form>
    <div class="user-assetsRequested-div">Requisition
        <select id = 'select-requisition'size="10" multiple="true">
           <%assetTypeAll.forEach(arrItem=>{%>
            <option value="<%=arrItem%>"  onclick = "resetSelToOne()"><%=arrItem.assetTypeClass%></option>
                <% });%>
        </select>
        <p>Requisitioned Assets:</p>
        <div class="assets-requisitioned-div"></div>
        Qty(Change last): <input type="number" min="1" id = 'qtyRequisitionInpt' value = '1'>
        <button onclick="addRequisition()">Add Asset</button>
        <button onclick="resetRequisition()">Reset</button>

        
        <div>
            <ul id = 'ulRequisition'></ul>
        </div>
        <form id = 'updateFormRequistion' method="POST" >
            <button class = 'btn btn-delete' type="submit">Update</button>
        </form>

    </div>
    
    
    
<!-- <div><button id = 'done-btn' disabled='false'>Done</button></div> -->

<%if (assetsByUser.length >0){%>
    <h2>Assets of User</h2>
    <%- include('../partials/userGrid.ejs', {asset:assetsByUser, large:true})%>;
        <%}%>
    </div>

    <div id = "assetList" class="assetList">
        <ul class="user-asset-pool">
            <% allAssets.forEach(asset=>{ %>
                <div class="divContLi" onclick = 'triggerClickCheckbox(this)' data-asset-id="<%=asset.id%>">
                   <li><input type="checkbox" class = 'user-asset-pool-checkbox' style="display:inline; width:10%"><a href="/asset/<%=asset.id%>"><%=asset.assetCode%></a></li>
                </div>
            <%})%>
        </ul>
    </div>
        
    
</div>


<script defer>


      

    let serverUserUserRequisition = '<%- JSON.stringify(user.userRequisition)%>';

    
    let userID = '<%- user.id %>';
    let profileCreatedMsgGrab = document.getElementsByClassName('profileCreatedMsg')[0];
    let idObj = {};
    let updateFormGrab = document.getElementById('updateForm');
    let assetListGrab = document.getElementsByClassName('assetList')[0];
    let userShowDivGrab = document.getElementsByClassName('user-show-div')[0];

    let assignShowButtonGrab = document.getElementsByClassName('assignShowButton')[0];

    let userAssetPoolGrab = document.getElementsByClassName('user-asset-pool')[0];
    let userAssetPoolCheckboxGrab;
    let assetGrab = document.getElementsByClassName('user-assets-div')[0];
    let userAssetsOwnDivGrab = document.getElementsByClassName('user-assetsOwn-div')[0];
    let doneBtnGrab =  document.getElementsByClassName('done-btn')[0];

    var lastAssignmentBtn;
    let updateFormRequistionGrab = document.getElementById('updateFormRequistion');

    let divId = document.getElementById('assets-requisitioned-div');

    
    // allAsset.forEach(aAsset => {
        //     console.log(aAsset);
        // });
       
//Auth
// assignShowButtonGrab.classList.add(authVar['auth']['assignShowButtonGrab']);

        function showAssetList(){
            userShowDivGrab.classList.toggle('user-show-div3');
            userShowDivGrab.classList.toggle('user-show-div2');
            userAssetPoolCheckboxGrab = document.getElementsByClassName('user-asset-pool-checkbox');
        }
        function userAssetAssign(this2){
            alert(this2.innerHTML);
            lastAssignmentBtn = this2.value;
            console.log(userID)
            var obj = {url:`/user/ls`}
            console.log(obj);
            
            console.log(assetListGrab);
            userAssetPoolCheckboxGrab = assetListGrab.getElementsByClassName('user-asset-pool-checkbox');
            console.log(userAssetPoolCheckboxGrab);
            var trueBoxes =  [...userAssetPoolCheckboxGrab].filter(item=>{
                return item.checked == true;
            })
            console.log(trueBoxes);
            console.log(userAssetPoolGrab);
            trueBoxes.forEach(item=>{
                assetGrab.appendChild(item.parentNode.parentNode); 
            })

            if (assetGrab.children.length){
                doneBtnGrab.classList.toggle('btn-deActivate'); 
            }
            idObj.userId = userID;
            getObjectIds(assetGrab);
            console.log(idObj);
            updateFormGrab.action = `/user/${JSON.stringify(idObj)}?_method=PUT&assignment=${this2.innerHTML}`;
            console.log(updateFormGrab.action);

       }
    
       function getObjectIds(assetDiv){
        idObj['idArr'] = [];
           let assetDivGrab = assetDiv.getElementsByClassName('divContLi');
           [...assetDivGrab].forEach(divItem=>{
               idObj['idArr'].push(divItem.getAttribute('data-asset-id'));
           })
           console.log(idObj)
       }

    function userAssetDeassign(this2, assetDiv, updateForm){
        alert(this2.innerHTML);
        console.log(this2);
        console.log(assetDiv);
        assetGrab = document.getElementsByClassName(assetDiv)[0];
        var inputChecks = assetGrab.getElementsByClassName('user-asset-pool-checkbox');
        var trueBoxes =  [...inputChecks].filter(item=>{
            return item.checked == true;
        })
        console.log(trueBoxes);
        trueBoxes.forEach(item=>{
            userAssetPoolGrab.appendChild(item.parentNode.parentNode); 
        })
        console.log(assetGrab);
        console.log(assetGrab.children.length);
        if (!assetGrab.children.length){
                doneBtnGrab.classList.toggle('btn-deActivate'); 
        }
        idObj.userId = userID;
            getObjectIds(assetGrab);
            console.log(idObj);
            console.log(document.getElementById(updateForm));
        document.getElementById(updateForm).action = `/user/${JSON.stringify(idObj)}?_method=PUT&assignment=${this2.innerHTML}`;
        console.log(updateFormGrab.action);
    }  

    function triggerClickCheckbox(this2){
    console.log(this2);
       var checkGrab = this2.getElementsByTagName('input')[0];
       checkGrab.checked = !checkGrab.checked;
    }

    setTimeout(function(){
            profileCreatedMsgGrab.style.display = 'none';
        }, 3000)

    var assetsRequisitionedDiv;
    var qtyRequisitionInptGrab = document.getElementById('qtyRequisitionInpt');
    var ulRequisitionGrab = document.getElementById('ulRequisition');
    var selectRequisitionGrab;
    var objRequisition = {};
    console.log(serverUserUserRequisition);
    if (serverUserUserRequisition){
        objRequisition = JSON.parse(serverUserUserRequisition);
        addRequisition();
    }

    // objRequisition = {}
    function addRequisition(){
        console.log(objRequisition);
        selectRequisitionGrab = document.getElementById('select-requisition').selectedOptions;
        console.log(selectRequisitionGrab);
        assignUlElement(selectRequisitionGrab, this);
               
        //assetsRequisitionedDiv.appendChild(document.createElement('ul'));
    }

    function assignUlElement(selectRequisitionGrab2, this2){
        [...selectRequisitionGrab2].forEach(selItem=>{
            if (objRequisition[selItem.innerHTML]){
                console.log('Exists');
                objRequisition[selItem.innerHTML] =  +objRequisition[selItem.innerHTML] + parseInt(qtyRequisitionInptGrab.value);
            }else{
                objRequisition[selItem.innerHTML] = +qtyRequisitionInptGrab.value;
            }
            // objRequisition[selItem.innerHTML] = (objRequisition[selItem.innerHTML] != undefined) ? objRequisition[selItem.innerHTML] + qtyRequisitionInptGrab.value: qtyRequisitionInptGrab.value;
        });
        console.log('@@@@@@@@@@@');
        console.log(objRequisition);
        assetsRequisitionedDiv = document.getElementById(divId);
        ulRequisitionGrab.innerHTML = '';
        Object.keys(objRequisition).forEach(arrItem=>{
            var divMiniCont = document.createElement('div');
                divMiniCont.setAttribute('class', 'divMiniLi')
            var liElm = document.createElement('li');
                liElm.style.display = 'inline'
            var btnPlus = document.createElement('button');
            var btnPlus = document.createElement('button');
                btnPlus.innerHTML = '+';
                btnPlus.onclick = function(){
                    changeObjRequisition(this);
                }
            var btnMinus = document.createElement('button')
                btnMinus.onclick = function(){
                    changeObjRequisition(this);
                }
                btnMinus.innerHTML = '-';
            liElm.innerHTML = arrItem +'('+objRequisition[arrItem]+')';
            divMiniCont.appendChild(btnMinus);
            divMiniCont.appendChild(btnPlus);
            divMiniCont.appendChild(liElm);
            ulRequisitionGrab.appendChild(divMiniCont);
            
            //set FORM action
            console.log('Use in action, ', this2.innerHTML);
            console.log('The String, ', JSON.stringify(objRequisition));
            updateFormRequistionGrab.action = `/user/requisition/${JSON.stringify(objRequisition)}?_method=PUT&userId=${userID}&assignment=Requisition`;

        })
    }

    function resetRequisition(){
        objRequisition = {};
    }

    function resetSelToOne(){
        qtyRequisitionInptGrab.value = 1;
    }

    function changeObjRequisition(this2){
        qtyRequisitionInptGrab.value = 0;
        if (this2.innerHTML == '+') {
            // alert('Adding');
            var liVal = this2.parentNode.getElementsByTagName('li')[0].innerHTML
            liVal = liVal.slice(0, liVal.indexOf('('));
            objRequisition[liVal] = +(objRequisition[liVal]) + 1;
            console.log(objRequisition);
            assignUlElement(selectRequisitionGrab, this2)
        }
        if (this2.innerHTML == '-') {
            // alert('Subtracting');
            var liVal = this2.parentNode.getElementsByTagName('li')[0].innerHTML
            liVal = liVal.slice(0, liVal.indexOf('('));
            objRequisition[liVal] =  +(objRequisition[liVal]) - 1;
            console.log(objRequisition);
            assignUlElement(selectRequisitionGrab, this2)
        }
    }
</script>

